---
- name: confirm redhat lsb util is present
  yum:
    name: redhat-lsb-core
    state: present
  when: nrinfragent_os_name|lower == 'redhat'

- name: reread ansible_lsb facts
  setup:
    filter: ansible_lsb*
  when: nrinfragent_os_name|lower == 'redhat'

- name: setup agent repo keys
  apt_key:
    url: https://download.newrelic.com/infrastructure_agent/gpg/newrelic-infra.gpg
    state: present
  when: nrinfragent_os_name|lower == 'debian'

- name: setup agent repo keys
  rpm_key:
    key: https://download.newrelic.com/infrastructure_agent/gpg/newrelic-infra.gpg
    state: present
  when: nrinfragent_os_name|lower == 'redhat'

- name: setup agent repo keys
  rpm_key:
    key: https://download.newrelic.com/infrastructure_agent/gpg/newrelic-infra.gpg
    state: present
  when: nrinfragent_os_name|lower == 'suse'

- name: confirm Debian apt-transport-https is present
  apt:
    name: apt-transport-https
    state: present
  when: nrinfragent_os_name|lower == 'debian'

- name: setup agent repo reference
  apt_repository:
    repo: "deb [arch=amd64] https://download.newrelic.com/infrastructure_agent/linux/apt {{ nrinfragent_os_codename }} main"
    state: present
    update_cache: "yes"
  when: nrinfragent_os_name|lower == 'debian'

- name: setup agent repo reference
  yum_repository:
    baseurl: "https://download.newrelic.com/infrastructure_agent/linux/yum/el/{{ (ansible_service_mgr == 'upstart') | ternary('6', '7') }}/x86_64"
    gpgcheck: "yes"
    gpgkey: https://download.newrelic.com/infrastructure_agent/gpg/newrelic-infra.gpg
    name: 'newrelic-infra'
    repo_gpgcheck: 'yes'
    state: present
    description: New Relic Infrastructure
  when: ansible_distribution|lower == 'amazon'
  register: setup_agent_repo

- name: setup agent repo reference
  yum_repository:
    baseurl: "https://download.newrelic.com/infrastructure_agent/linux/yum/el/{{ nrinfragent_os_version }}/x86_64"
    gpgcheck: "yes"
    gpgkey: https://download.newrelic.com/infrastructure_agent/gpg/newrelic-infra.gpg
    name: 'newrelic-infra'
    repo_gpgcheck: "{{ (nrinfragent_os_version == '5') | ternary('no', 'yes') }}"
    state: present
    description: New Relic Infrastructure
  when: nrinfragent_os_name|lower == 'redhat' and ansible_distribution|lower != 'amazon'
  register: setup_agent_repo

- name: setup agent repo reference
  zypper_repository:
    name: newrelic-infra
    description: New Relic Infrastructure Agent
    repo: "http://download.newrelic.com/infrastructure_agent/linux/zypp/sles/{{ ansible_distribution_version }}/{{ ansible_machine }}/"
    runrefresh: "yes"
    auto_import_keys: "yes"
    disable_gpg_check: "yes"
  when: nrinfragent_os_name|lower == 'suse'
  register: infra_agent_zypper_repo
  
- name: run make cache to actually import gpg key
  command: "yum -q makecache -y --disablerepo='*' --enablerepo='newrelic-infra'"
  when: nrinfragent_os_name|lower == 'redhat' and setup_agent_repo.changed
  tags:
    - skip_ansible_lint
  args:
    warn: false

- name: install agent pre2.8.0
  package:
    name: "newrelic-infra"
    state: "{{ nrinfragent_state }}"
  when: nrinfragent_os_name|lower != 'windows' and ansible_version.full < "2.8.0"

- name: install agent post2.8.0
  package:
    name: "newrelic-infra"
    state: "{{ nrinfragent_state }}"
  when: nrinfragent_os_name|lower != 'windows' and ansible_version.full >= "2.8.0" and nrinfragent_os_name|lower != 'amazon' and nrinfragent_os_name|lower != 'redhat'

- name: Install agent yum
  yum:
    name: "newrelic-infra"
    state: "{{ nrinfragent_state }}"
    lock_timeout: 30
  when: nrinfragent_os_name|lower == 'redhat' and nrinfragent_os_name|lower == 'amazon' and ansible_version.full >= "2.8.0"

- name: install integrations pre2.8.0
  package:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
  with_items: "{{ nrinfragent_integrations }}"
  when: nrinfragent_os_name|lower != 'windows' and ansible_version.full < "2.8.0"

- name: Install integrations post2.8.0
  package:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
  with_items: "{{ nrinfragent_integrations }}"
  when: nrinfragent_os_name|lower != 'windows' and ansible_version.full >= "2.8.0" and nrinfragent_os_name|lower != 'amazon' and nrinfragent_os_name|lower != 'redhat'

- name: Install integrations yum
  yum:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
    lock_timeout: 30
  with_items: "{{ nrinfragent_integrations }}"
  when: nrinfragent_os_name|lower == 'redhat' and nrinfragent_os_name|lower == 'amazon' and ansible_version.full >= "2.8.0"

- name: install agent (windows)
  win_chocolatey:
    name: newrelic-infra
    state: "{{ nrinfragent_state }}"
    version: "{{ nrinfragent_choco_version | default(omit) }}"
  when:
    - nrinfragent_os_name|lower == 'windows'

- name: setup agent config
  template:
    src: newrelic-infra.yml.j2
    dest: /etc/newrelic-infra.yml
    mode: 0600
  notify: restart newrelic-infra
  when:
    - nrinfragent_state != "absent"
    - nrinfragent_os_name|lower != 'windows'

- name: setup agent config
  win_template:
    src: newrelic-infra.yml.j2
    dest: '%ProgramFiles%\New Relic\newrelic-infra\newrelic-infra.yml'
  notify: restart newrelic-infra (windows)
  when:
    - nrinfragent_state != "absent"
    - nrinfragent_os_name|lower == 'windows'

- name: setup agent service
  service:
    name: newrelic-infra
    state: "{{ nrinfragent_service_state }}"
    enabled: "{{ nrinfragent_service_enabled }}"
  when:
    - nrinfragent_state != "absent"
    - nrinfragent_os_name|lower != 'windows'

- name: setup agent service
  win_service:
    name: newrelic-infra
    state: "{{ nrinfragent_service_state }}"
  when:
    - nrinfragent_state != "absent"
    - nrinfragent_os_name|lower == 'windows'
